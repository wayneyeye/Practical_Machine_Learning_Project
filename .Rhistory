{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
}
preprocess_act<-function(dataframe){
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1,2)] #truncate entry number and user_name
for (i in 1:(ncol(dataframe_out)-1))
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
}
preprocess_act<-function(dataframe){
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
}
preprocess_act(training_raw)
out_1<-preprocess_act(training_raw)
out_1<-preprocess_act(training_raw,0.05)
preprocess_act<-function(dataframe,c_NA_ratio){
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
}
out_1<-preprocess_act(training_raw,0.05)
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
}
out_1<-preprocess_act(training_raw,0.05)
warnings(out_1<-preprocess_act(training_raw,0.05))
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
return(dataframe_out)
}
warnings(out_1<-preprocess_act(training_raw,0.05))
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
#return(dataframe_out)
}
warnings(out_1<-preprocess_act(training_raw,0.05))
rm(out_1)
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
return(dataframe_out)
}
warnings(out_1<-preprocess_act(training_raw,0.05))
as.numeric(as.character(training_raw[,15]))
training_raw[,15]<-as.numeric(as.character(training_raw[,15]))
training_raw[,15]
str(training_raw)
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
head(dataframe_out)
}
warnings(out_1<-preprocess_act(training_raw,0.05))
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
head(dataframe_out)
}
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
}
}
warnings(out_1<-preprocess_act(training_raw,0.05))
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
print(class(dataframe_out[,i]))
}
}
warnings(out_1<-preprocess_act(training_raw,0.05))
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
print(class(dataframe_out[,i]))
}
return(dataframe_out)
}
warnings(out_1<-preprocess_act(training_raw,0.05))
preprocess_act<-function(dataframe,c_NA_ratio){
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
c_NA_ratio<-0.05
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
data.frame(dataframe_out)
}
warnings(out_1<-preprocess_act(training_raw,0.05))
View(out_1)
NA_rate<-function(v){
sum(is.na(v))/length(v)
}
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
data.frame(dataframe_out)
}
warnings(out_1<-preprocess_act(training_raw,0.05))
sapply(out_1,NA_rate)
sapply(training_raw,NA_rate)
str(training_raw)
table(training_raw$kurtosis_roll_belt)
NA_rate<-function(v){
sum((is.na(v))||(v==''))/length(v)
}
(sapply(training_raw,NA_rate))
NA_rate<-function(v){
if (class(v)=="factor")
sum(((v==''))/length(v)
else sum(is.na(v))/length(v)
}
NA_rate<-function(v){
if (class(v)=="factor")
{
sum((v==''))/length(v)
}
else sum(is.na(v))/length(v)
}
(sapply(training_raw,NA_rate))
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
selectCol
table(selectCol)
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
data.frame(dataframe_out)
}
out_1<-preprocess_act(training_raw,0.05)
head(out_1)
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
dataframe_out<-preProcess(dataframe_out[,-ncol(dataframe_out)],method="knnImpute") # missing imputation
data.frame(dataframe_out)
}
training_raw<-read.csv('pml-training.csv')
testing_raw<-read.csv('pml-testing.csv')
#preprocessing
NA_rate<-function(v){
if (class(v)=="factor")
{
sum((v==''))/length(v)
}
else sum(is.na(v))/length(v)
}
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
dataframe_out<-preProcess(dataframe_out[,-ncol(dataframe_out)],method="knnImpute") # missing imputation
data.frame(dataframe_out)
}
training_0<-preprocess_act(training_raw)
training_0<-preprocess_act(training_raw,0.1)
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
data.frame(dataframe_out)
dataframe_out<-preProcess(dataframe_out[,-ncol(dataframe_out)],method="knnImpute") # missing imputation
}
training_0<-preprocess_act(training_raw,0.1)
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
data.frame(dataframe_out)
prep_obj1<-preProcess(dataframe_out[,-ncol(dataframe_out)],method="knnImpute") # missing imputation
imputed<-predict(prep_obj1,dataframe_out[,-ncol(dataframe_out)])
for (i in 1:(ncol(dataframe_out)-1)){
dataframe_out[,i]<imputed[,i]
}
}
training_0<-preprocess_act(training_raw,0.1)
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
prep_obj1<-preProcess(dataframe_out[,-ncol(dataframe_out)],method="knnImpute") # missing imputation
imputed<-predict(prep_obj1,dataframe_out[,-ncol(dataframe_out)])
for (i in 1:(ncol(dataframe_out)-1)){
dataframe_out[,i]<imputed[,i]
}
data.frame(dataframe_out)
}
training_0<-preprocess_act(training_raw,0.1)
View(out_1)
View(training_0)
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
prep_obj1<-preProcess(dataframe_out[,-ncol(dataframe_out)],method="knnImpute") # missing imputation
imputed<-predict(prep_obj1,dataframe_out[,-ncol(dataframe_out)])
for (i in 1:(ncol(dataframe_out)-1)){
dataframe_out[,i]<(imputed[,i]-mean(imputed[,i]))/sd(imputed[,i])
}
data.frame(dataframe_out)
}
training_0<-preprocess_act(training_raw,0.1)
View(training_0)
preprocess_act<-function(dataframe,c_NA_ratio){
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
prep_obj1<-preProcess(dataframe_out[,-ncol(dataframe_out)],method="knnImpute") # missing imputation
imputed<-predict(prep_obj1,dataframe_out[,-ncol(dataframe_out)])
for (i in 1:(ncol(dataframe_out)-1)){
dataframe_out[,i]<-(imputed[,i]-mean(imputed[,i]))/sd(imputed[,i])
}
data.frame(dataframe_out)
}
training_0<-preprocess_act(training_raw,0.1)
View(training_0)
training_0<-preprocess_act(training_raw,0.1)
preProc<-preProcess(training_0[,-ncol(training_0)],method='pca',pcaComp=2)
training_pc<-predict(preProc,training_0[,-ncol(training_0)])
plot(training_pc[,1],training_pc[,2],col=as.numeric(training_0$classe))
table(as.numeric(training_0$classe)))
table(as.numeric(training_0$classe))
table((training_0$classe))
inTrain<-createDataPartition(y=training_0$classe,p=0.75,list=FALSE)
training<-training_0[inTrain,]
validating<-training_0[-inTrain,]
modelfit<-train(classe~.,methods="rf",data=training)
modelfit<-train(classe~.,methods="gbm",data=training)
inTrain<-createDataPartition(y=training_0$classe,p=0.1,list=FALSE)
training<-training_0[inTrain,]
validating<-training_0[-inTrain,]
#Machine learning
modelfit<-train(classe~.,methods="gbm",data=training)
training_0<-preprocess_act(training_raw,0.1)
preProc<-preProcess(training_0[,-ncol(training_0)],method='pca',thresh = 0.8)
training_pc<-predict(preProc,training_0[,-ncol(training_0)])
inTrain<-createDataPartition(y=training_0$classe,p=0.8,list=FALSE)
training<-training_0[inTrain,]
validating<-training_0[-inTrain,]
#Machine learning
modelfit<-train(classe~.,methods="rf",preProcess="pca",thresh=0.8,data=training)
modelfit<-train(classe~.,methods="rf",preProcess="pca",thresh=0.1,data=training)
summary(preProc)
modelfit<-train(classe~.,methods="rf",preProcess="pca",thresh=0.1,data=training)
modelfit<-train(classe~.,methods="rf",preProcess="gbma",thresh=0.1,data=training)
modelfit<-train(classe~.,methods="gbm",preProcess="pca",thresh=0.1,data=training)
inTrain<-createDataPartition(y=training_0$classe,p=0.1,list=FALSE)
training<-training_0[inTrain,]
validating<-training_0[-inTrain,]
#Machine learning
modelfit<-train(classe~.,methods="gbm",preProcess="pca",thresh=0.8,data=training)
inTrain<-createDataPartition(y=training_0$classe,p=0.01,list=FALSE)
training<-training_0[inTrain,]
validating<-training_0[-inTrain,]
#Machine learning
modelfit<-train(classe~.,methods="gbm",preProcess="pca",thresh=0.8,data=training)
prediction_valid<-predict(modelfit,validating)
table(prediction_valid,validating$classe)
inTrain<-createDataPartition(y=training_0$classe,p=0.7,list=FALSE)
training<-training_0[inTrain,]
validating<-training_0[-inTrain,]
#Machine learning
modelfit<-train(classe~.,methods="gbm",preProcess="pca",thresh=0.8,data=training)
prediction_valid<-predict(modelfit,validating)
table(prediction_valid,validating$classe)
?"table"
NA_rate<-function(v){
if (class(v)=="factor")
{
sum((v==''))/length(v)
}
else sum(is.na(v))/length(v)
}
c_NA_ratio<-0.1
selectCol<-(sapply(training_raw,NA_rate))<c_NA_ratio
preprocess_act<-function(dataframe){
dataframe_out<-dataframe[,selectCol]
dataframe_out<-dataframe_out[,-c(1:7)] #truncate non-motional variables
for (i in 1:(ncol(dataframe_out)-1)) #leave the classe be factor
{
#print(class(dataframe_out[,i]))
if (class(dataframe_out[,i])=="factor")
dataframe_out[,i]<-as.numeric(as.character(dataframe_out[,i]))
#print(class(dataframe_out[,i]))
}
prep_obj1<-preProcess(dataframe_out[,-ncol(dataframe_out)],method="knnImpute") # missing imputation
imputed<-predict(prep_obj1,dataframe_out[,-ncol(dataframe_out)])
for (i in 1:(ncol(dataframe_out)-1)){
dataframe_out[,i]<-(imputed[,i]-mean(imputed[,i]))/sd(imputed[,i]) #standardize
}
data.frame(dataframe_out)
}
testing<-preprocess_act(testing_raw)
answers<-predict(modelfit,testing)
pml_write_files(answers)
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(answers)
training_0<-preprocess_act(training_raw)
preProc<-preProcess(training_0[,-ncol(training_0)],method='pca',thresh = 0.8)
training_pc<-predict(preProc,training_0[,-ncol(training_0)])
summary(preProc)
plot(training_pc[,1],training_pc[,2],col=as.numeric(training_0$classe))
#Experiment design
set.seed(123)
inTrain<-createDataPartition(y=training_0$classe,p=0.7,list=FALSE)
training<-training_0[inTrain,]
validating<-training_0[-inTrain,]
#Machine learning
modelfit<-train(classe~.,methods="gbm",preProcess="pca",thresh=0.9,data=training)
prediction_valid<-predict(modelfit,validating)
table(prediction_valid,validating$classe)
testing<-preprocess_act(testing_raw)
prediction_valid<-predict(modelfit,validating)
#submission
answers2<-predict(modelfit,testing)
rbind(answers,answers2)
head(testing_raw)
table(training_raw$user_name)
training_0<-preprocess_act(training_raw)
preProc<-preProcess(training_0[,-ncol(training_0)],method='pca',thresh = 0.9)
training_pc<-predict(preProc,training_0[,-ncol(training_0)])
?confusionMatrix
confusionMatrix(prediction_valid,validating$classe)
